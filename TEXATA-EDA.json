{"paragraphs":[{"text":"%dep\nz.load(\"/home/antoine/texata-r1-spark-2017.jar\")","user":"anonymous","dateUpdated":"2017-09-30T16:27:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@309d6d47\n"}]},"apps":[],"jobName":"paragraph_1506786708172_1081166466","id":"20170930-155148_1956665407","dateCreated":"2017-09-30T15:51:48+0000","dateStarted":"2017-09-30T16:27:56+0000","dateFinished":"2017-09-30T16:28:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:18670"},{"text":"%md\n# Welcome to Texata 2017\n\nYou’ve recently joined the data science team of a music streaming company who is looking to improve its\nservices by analyzing users’ streaming history. You are tasked to run some initial exploration of the data\nand to find some interesting actionable insights that will eventually be used to improve the streaming\nservice. Examples of actionable insights include:\n\n1. Descriptive data analysis about the dataset including suggestions for preprocessing to clean the\ndataset.\n2. Insights about genres (e.g. top genres, top artists by genre, top releases by genre), artists (e.g.\ntop recordings by artist, top releases by artist), users (e.g. top artists by user, top genres by user)\netc.\n3. Approaches to find similar users, similar artists, similar recordings for recommendation systems.\n4. Peak activity time to optimize servers’ usage.\n5. Any other novel applications/actionable insights based on this dataset.","user":"anonymous","dateUpdated":"2017-09-30T15:44:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Welcome to Texata 2017</h1>\n<p>You’ve recently joined the data science team of a music streaming company who is looking to improve its<br/>services by analyzing users’ streaming history. You are tasked to run some initial exploration of the data<br/>and to find some interesting actionable insights that will eventually be used to improve the streaming<br/>service. Examples of actionable insights include:</p>\n<ol>\n  <li>Descriptive data analysis about the dataset including suggestions for preprocessing to clean the<br/>dataset.</li>\n  <li>Insights about genres (e.g. top genres, top artists by genre, top releases by genre), artists (e.g.<br/>top recordings by artist, top releases by artist), users (e.g. top artists by user, top genres by user)<br/>etc.</li>\n  <li>Approaches to find similar users, similar artists, similar recordings for recommendation systems.</li>\n  <li>Peak activity time to optimize servers’ usage.</li>\n  <li>Any other novel applications/actionable insights based on this dataset.</li>\n</ol>\n</div>"}]},"apps":[],"jobName":"paragraph_1506786190988_922714505","id":"20170930-154310_1514720828","dateCreated":"2017-09-30T15:43:10+0000","dateStarted":"2017-09-30T15:44:07+0000","dateFinished":"2017-09-30T15:44:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18671"},{"text":"# %sh\n# wget http://dy4e3l0miomia.cloudfront.net/datasets/listenbrainz.csv.zip\n# unzip /home/antoine/listenbrainz.csv.zip\n# head /home/antoine/listenbrainz.csv\n# hadoop fs -mkdir /user/antoine/\n# hadoop fs -mkdir /user/antoine/listenbrainz/\n# hadoop fs -put listenbrainz.csv /user/antoine/listenbrainz/\n# rm listenbrainz.csv.zip\n# rm listenbrainz.csv","user":"anonymous","dateUpdated":"2017-09-30T16:26:53+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"listened_at,user_name,artist_msid,artist_name,artist_mbids,release_msid,release_name,release_mbid,recording_msid,track_name,recording_mbid,tags\n2017-08-04 10:05:25 UTC,fangsofthefox,f0e45624-7253-4d7d-9d1c-3f1be00188b3,Galapaghost,\"\",02700715-c6d4-41d4-af7e-5f5bf21815e8,\"\",\"\",2ebdab47-6477-4d47-a074-b2de6ff5a1b0,Goodbye (My Visa Arrived),\"\",\"\"\n2017-08-04 10:13:01 UTC,fangsofthefox,75b87461-b9c0-4a54-902a-3f7774e35f61,Modern Baseball,\"\",b06a07a5-fa2c-44d6-8167-7df33704080b,\"\",\"\",c98725cf-08eb-46a8-a5a1-ef3c269072aa,\"Fine, Great\",f8ad7296-0a71-4044-bc38-cddc2aed54f9,\"\"\n2017-08-05 13:24:34 UTC,fangsofthefox,2eaf3e53-8861-44f2-b40e-2e146c7ee79c,360,\"\",378e31a8-0813-49b7-bb2e-78241811d507,\"\",\"\",e8d048e4-721b-4fe4-910b-7c8ddbbb59ff,You And I,4b6e6561-e189-4b97-81ed-cea789b7b749,\"\"\n2017-08-05 18:45:37 UTC,fangsofthefox,75b87461-b9c0-4a54-902a-3f7774e35f61,Modern Baseball,\"\",6799b7f8-fee0-4e48-9f7b-8e2243cefa2a,\"\",\"\",41943654-bb4c-4a8e-8068-92a64930f6b5,Re-Do,f1702a51-b56b-4c6e-b0e1-ce1e1cab36a0,\"\"\n2017-08-06 10:45:17 UTC,fangsofthefox,60f81b4c-d820-446a-8263-c8891bb8acea,Manchester Orchestra,\"\",b5fe12c3-359c-440c-ac5c-1104c97eab95,\"\",\"\",3ba1d549-b07f-47d5-a68a-1c4c804a56c6,The Wolf,\"\",\"\"\n2017-08-05 15:54:24 UTC,fangsofthefox,2d33faea-68eb-40b9-98d4-b9bf62442d6f,Manic Street Preachers,\"\",93743051-e883-4211-9b13-453f8d8a4747,\"\",\"\",7316561c-fe39-447d-b9c4-0c9bd71bf829,Your Love Alone Is Not Enough - Demo,\"\",\"\"\n2017-08-06 20:23:57 UTC,JonaD92,b603b2bf-c1dc-4274-9d79-f2663ccf635a,emune,\"\",,\"\",\"\",dde2f317-6efb-4bcd-99d5-5e6d0ca45f61,lifted,\"\",\"\"\n2017-08-05 19:32:18 UTC,fangsofthefox,00b06570-c0fa-4158-972c-e8cc65d9ef09,Pet Library,\"\",4323a679-d2af-4938-8c07-8619446d934f,\"\",\"\",4019a95c-e147-4e4f-9fd4-ed27954ac808,There's a Reason People Are Staring,\"\",\"\"\n2017-08-05 13:47:48 UTC,fangsofthefox,2eaf3e53-8861-44f2-b40e-2e146c7ee79c,360,\"\",378e31a8-0813-49b7-bb2e-78241811d507,\"\",\"\",a0fa5174-251e-4af7-a836-76f21992a0d2,Purple Waterfall,\"\",\"\"\n"}]},"apps":[],"jobName":"paragraph_1506786228909_-1459419177","id":"20170930-154348_1838779675","dateCreated":"2017-09-30T15:43:48+0000","dateStarted":"2017-09-30T15:49:21+0000","dateFinished":"2017-09-30T15:49:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18672"},{"text":"val df = spark.read.option(\"header\", \"true\").csv(\"/user/antoine/listenbrainz\").cache\ndf.createOrReplaceTempView(\"listenbrainz\")\nsqlContext.cacheTable(\"listenbrainz\")\ndf.printSchema","user":"anonymous","dateUpdated":"2017-09-30T16:58:13+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndf: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [listened_at: string, user_name: string ... 10 more fields]\nroot\n |-- listened_at: string (nullable = true)\n |-- user_name: string (nullable = true)\n |-- artist_msid: string (nullable = true)\n |-- artist_name: string (nullable = true)\n |-- artist_mbids: string (nullable = true)\n |-- release_msid: string (nullable = true)\n |-- release_name: string (nullable = true)\n |-- release_mbid: string (nullable = true)\n |-- recording_msid: string (nullable = true)\n |-- track_name: string (nullable = true)\n |-- recording_mbid: string (nullable = true)\n |-- tags: string (nullable = true)\n\n+--------------------+-------------+--------------------+--------------------+------------+--------------------+------------+------------+--------------------+--------------------+--------------------+----+\n|         listened_at|    user_name|         artist_msid|         artist_name|artist_mbids|        release_msid|release_name|release_mbid|      recording_msid|          track_name|      recording_mbid|tags|\n+--------------------+-------------+--------------------+--------------------+------------+--------------------+------------+------------+--------------------+--------------------+--------------------+----+\n|2017-08-04 10:05:...|fangsofthefox|f0e45624-7253-4d7...|         Galapaghost|        null|02700715-c6d4-41d...|        null|        null|2ebdab47-6477-4d4...|Goodbye (My Visa ...|                null|null|\n|2017-08-04 10:13:...|fangsofthefox|75b87461-b9c0-4a5...|     Modern Baseball|        null|b06a07a5-fa2c-44d...|        null|        null|c98725cf-08eb-46a...|         Fine, Great|f8ad7296-0a71-404...|null|\n|2017-08-05 13:24:...|fangsofthefox|2eaf3e53-8861-44f...|                 360|        null|378e31a8-0813-49b...|        null|        null|e8d048e4-721b-4fe...|           You And I|4b6e6561-e189-4b9...|null|\n|2017-08-05 18:45:...|fangsofthefox|75b87461-b9c0-4a5...|     Modern Baseball|        null|6799b7f8-fee0-4e4...|        null|        null|41943654-bb4c-4a8...|               Re-Do|f1702a51-b56b-4c6...|null|\n|2017-08-06 10:45:...|fangsofthefox|60f81b4c-d820-446...|Manchester Orchestra|        null|b5fe12c3-359c-440...|        null|        null|3ba1d549-b07f-47d...|            The Wolf|                null|null|\n|2017-08-05 15:54:...|fangsofthefox|2d33faea-68eb-40b...|Manic Street Prea...|        null|93743051-e883-421...|        null|        null|7316561c-fe39-447...|Your Love Alone I...|                null|null|\n|2017-08-06 20:23:...|      JonaD92|b603b2bf-c1dc-427...|               emune|        null|                null|        null|        null|dde2f317-6efb-4bc...|              lifted|                null|null|\n|2017-08-05 19:32:...|fangsofthefox|00b06570-c0fa-415...|         Pet Library|        null|4323a679-d2af-493...|        null|        null|4019a95c-e147-4e4...|There's a Reason ...|                null|null|\n|2017-08-05 13:47:...|fangsofthefox|2eaf3e53-8861-44f...|                 360|        null|378e31a8-0813-49b...|        null|        null|a0fa5174-251e-4af...|    Purple Waterfall|                null|null|\n|2017-08-06 20:50:...|      JonaD92|d87a907a-9cbd-4e1...|                Sraw|        null|                null|        null|        null|06d5df33-39b9-4c5...|      Truly Sicknin'|                null|null|\n|2017-08-05 12:59:...|fangsofthefox|846ead02-a0c8-490...|              Ghouls|        null|6c7d3131-2cb6-425...|        null|        null|55aef853-2cf9-45c...|      The Difference|                null|null|\n|2017-08-03 17:42:...|fangsofthefox|f0e45624-7253-4d7...|         Galapaghost|        null|02700715-c6d4-41d...|        null|        null|b3023275-b348-448...|The Greatest Room...|                null|null|\n|2017-08-05 16:01:...|fangsofthefox|2d33faea-68eb-40b...|Manic Street Prea...|        null|93743051-e883-421...|        null|        null|712bbb65-8550-446...|The Second Great ...|                null|null|\n|2017-08-05 10:48:...|fangsofthefox|846ead02-a0c8-490...|              Ghouls|        null|6c7d3131-2cb6-425...|        null|        null|baceb91b-5dd0-4d8...|          Autophobia|                null|null|\n|2017-08-05 14:30:...|fangsofthefox|2eaf3e53-8861-44f...|                 360|        null|378e31a8-0813-49b...|        null|        null|53ec3dad-6792-4d8...|         Eddie Jones|                null|null|\n|2017-08-05 15:45:...|fangsofthefox|2d33faea-68eb-40b...|Manic Street Prea...|        null|93743051-e883-421...|        null|        null|1137291a-b4f2-496...|Send Away the Tig...|                null|null|\n|2017-08-05 19:35:...|fangsofthefox|00b06570-c0fa-415...|         Pet Library|        null|4323a679-d2af-493...|        null|        null|601f837d-6d70-445...|Hooray! Everyone'...|                null|null|\n|2017-08-05 14:57:...|fangsofthefox|2d33faea-68eb-40b...|Manic Street Prea...|        null|93743051-e883-421...|        null|        null|9fe24578-c0e6-4d2...|Send Away the Tig...|                null|null|\n|2017-08-03 12:47:...|fangsofthefox|5d1d6f4e-451e-4db...|      Sonic Boom Six|        null|4daaa10a-6825-4d0...|        null|        null|0a107b24-4d48-47e...|Through The Eyes ...|1c7f378a-455b-41f...|null|\n|2017-08-03 15:04:...|fangsofthefox|f0e45624-7253-4d7...|         Galapaghost|        null|02700715-c6d4-41d...|        null|        null|299f9aad-076a-435...|   Mister Mediocrity|                null|null|\n+--------------------+-------------+--------------------+--------------------+------------+--------------------+------------+------------+--------------------+--------------------+--------------------+----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1506788355961_1752328892","id":"20170930-161915_1876169469","dateCreated":"2017-09-30T16:19:15+0000","dateStarted":"2017-09-30T16:28:50+0000","dateFinished":"2017-09-30T16:28:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18673"},{"title":"Let's load some useful UDFs","text":"import java.sql.Timestamp\nimport java.text.SimpleDateFormat\nimport scala.util.Try\n\nval POP_CHECK: (String) => Int = (s: String) => {\nif(Try(s.trim.length).getOrElse(0) > 0) 1 else 0\n}\n\nval ASCIICLASS_HIGHGRAIN: (String) => String = (s: String) => {\ns.replaceAll(\"[a-z]\", \"a\")\n.replaceAll(\"[A-Z]\", \"A\")\n.replaceAll(\"[0-9]\", \"9\")\n.replaceAll(\"\\t\", \"T\")\n}\n\nval ASCIICLASS_LOWGRAIN: (String) => String = (s: String) => {\ns.replaceAll(\"[a-z]+\", \"a\")\n.replaceAll(\"[A-Z]+\", \"A\")\n.replaceAll(\"[0-9]+\", \"9\")\n.replaceAll(\"\\t\", \"T\")\n}\n\nval TO_TIME: (String) => Timestamp = (s: String) => {\nTry(new Timestamp(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s).getTime)).getOrElse(null)\n}\n\nval DAY_OF_MONTH: (Timestamp) => Int = (s: Timestamp) => {\nnew org.joda.time.DateTime(s.getTime).getDayOfMonth\n}\n\nval MONTH_OF_YEAR: (Timestamp) => Int = (s: Timestamp) => {\nnew org.joda.time.DateTime(s.getTime).getMonthOfYear\n}\n\nval YEAR: (Timestamp) => Int = (s: Timestamp) => {\nnew org.joda.time.DateTime(s.getTime).getYear\n}\n\nval DAY_OF_WEEK: (Timestamp) => Int = (s: Timestamp) => {\nnew org.joda.time.DateTime(s.getTime).getDayOfWeek\n}\n\nval HOUR_OF_DAY: (Timestamp) => Int = (s: Timestamp) => {\nnew org.joda.time.DateTime(s.getTime).getHourOfDay\n}\n\nsqlContext.udf.register(\"POP_CHECK\", POP_CHECK)\nsqlContext.udf.register(\"ASCIICLASS_HIGHGRAIN\", ASCIICLASS_HIGHGRAIN)\nsqlContext.udf.register(\"ASCIICLASS_LOWGRAIN\", ASCIICLASS_LOWGRAIN)\nsqlContext.udf.register(\"TO_TIME\", TO_TIME)\nsqlContext.udf.register(\"DAY_OF_MONTH\", DAY_OF_MONTH)\nsqlContext.udf.register(\"MONTH_OF_YEAR\", MONTH_OF_YEAR)\nsqlContext.udf.register(\"YEAR\", YEAR)\nsqlContext.udf.register(\"DAY_OF_WEEK\", DAY_OF_WEEK)\nsqlContext.udf.register(\"HOUR_OF_DAY\", HOUR_OF_DAY)","user":"anonymous","dateUpdated":"2017-09-30T16:58:13+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport java.sql.Timestamp\n\nimport java.text.SimpleDateFormat\n\nimport scala.util.Try\n\nPOP_CHECK: String => Int = <function1>\n\nASCIICLASS_HIGHGRAIN: String => String = <function1>\n\nASCIICLASS_LOWGRAIN: String => String = <function1>\n\nTO_TIME: String => java.sql.Timestamp = <function1>\n\nDAY_OF_MONTH: java.sql.Timestamp => Int = <function1>\n\nMONTH_OF_YEAR: java.sql.Timestamp => Int = <function1>\n\nYEAR: java.sql.Timestamp => Int = <function1>\n\nDAY_OF_WEEK: java.sql.Timestamp => Int = <function1>\n\nHOUR_OF_DAY: java.sql.Timestamp => Int = <function1>\n\nres18: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\n\nres19: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(StringType)))\n\nres20: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(StringType)))\n\nres21: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,TimestampType,Some(List(StringType)))\n\nres22: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(TimestampType)))\n\nres23: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(TimestampType)))\n\nres24: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(TimestampType)))\n\nres25: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(TimestampType)))\n\nres26: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(TimestampType)))\n"}]},"apps":[],"jobName":"paragraph_1506787765326_-1450776865","id":"20170930-160925_1636325465","dateCreated":"2017-09-30T16:09:25+0000","dateStarted":"2017-09-30T16:30:21+0000","dateFinished":"2017-09-30T16:30:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18674"},{"title":"What is the proportion of Empty / Non Empty tags","text":"%sql\nSELECT POP_CHECK(tags) AS nonEmpty, COUNT(1) FROM listenbrainz\nGROUP BY nonEmpty","user":"anonymous","dateUpdated":"2017-09-30T16:47:01+0000","config":{"colWidth":6,"enabled":true,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"nonEmpty\tcount(1)\n1\t22124\n0\t52600844\n"}]},"apps":[],"jobName":"paragraph_1506788518669_377634751","id":"20170930-162158_271399760","dateCreated":"2017-09-30T16:21:58+0000","dateStarted":"2017-09-30T16:44:33+0000","dateFinished":"2017-09-30T16:44:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18675"},{"title":"What is the proportion of Empty / Non Empty users","text":"%sql\nSELECT POP_CHECK(artist_name) AS nonEmpty, COUNT(1) FROM listenbrainz\nGROUP BY nonEmpty","user":"anonymous","dateUpdated":"2017-09-30T16:47:08+0000","config":{"colWidth":6,"enabled":true,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"nonEmpty\tcount(1)\n1\t52622968\n"}]},"apps":[],"jobName":"paragraph_1506789895159_-1364928076","id":"20170930-164455_1625290697","dateCreated":"2017-09-30T16:44:55+0000","dateStarted":"2017-09-30T16:45:16+0000","dateFinished":"2017-09-30T16:45:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18676"},{"title":"Isolating records with non empty TAGs","text":"val popCheck = udf(POP_CHECK)\ndf.filter(popCheck(col(\"tags\")) === 1).select(\"tags\").distinct.show\n// Records with non empty tags look a result of a badly formated CSV than a predefined taxonomy. \n// Tags / Genres cannot be used here","user":"anonymous","dateUpdated":"2017-09-30T16:58:13+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\npopCheck: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\n+--------------------+\n|                tags|\n+--------------------+\n| mit zärtlichen T...|\n|            J-Trance|\n|        Second Woman|\n|            Shanty)\"|\n|     Chief Mourner)\"|\n|     non enim sciunt|\n|       le Cigarières|\n|6282ba7e-afa6-4e5...|\n|51bd00a0-f824-4c7...|\n|89319acb-1f2d-4dd...|\n|             Ascanio|\n|46ec2e88-3cfb-4ee...|\n|          Scipione)\"|\n|              Ramfis|\n|68884893-0db0-4f6...|\n|d6b7e9f5-a19e-4d7...|\n|               anime|\n| heißt dich dein ...|\n|                70 S|\n|              Master|\n+--------------------+\nonly showing top 20 rows\n\n\ndfWithTags: Unit = ()\n"}]},"apps":[],"jobName":"paragraph_1506788752961_53831064","id":"20170930-162552_1516109925","dateCreated":"2017-09-30T16:25:52+0000","dateStarted":"2017-09-30T16:44:27+0000","dateFinished":"2017-09-30T16:44:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18677"},{"text":"%sql\nSELECT ASCIICLASS_HIGHGRAIN(listened_at) AS mask, COUNT(1) FROM listenbrainz\nGROUP BY mask","user":"anonymous","dateUpdated":"2017-09-30T16:50:16+0000","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"mask\tcount(1)\n9999-99-99 99:99:99 AAA\t52622968\n"}]},"apps":[],"jobName":"paragraph_1506789430093_1828829861","id":"20170930-163710_743307037","dateCreated":"2017-09-30T16:37:10+0000","dateStarted":"2017-09-30T16:49:29+0000","dateFinished":"2017-09-30T16:49:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18678"},{"text":"%sql\nSELECT ASCIICLASS_LOWGRAIN(user_name) AS mask, COUNT(1) FROM (\nSELECT DISTINCT user_name AS user_name FROM listenbrainz) tmp\nGROUP BY mask ORDER BY 2 DESC","user":"anonymous","dateUpdated":"2017-09-30T16:51:43+0000","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"mask\tcount(1)\na\t311\nAa\t90\na9\t64\nAaAa\t42\nAa9\t15\na_a\t13\nAaAaAa\t10\nAaA\t10\na9a\t8\nAa Aa\t7\nAaAa9\t6\nAa_Aa\t5\na.a\t5\naAa\t4\n9a\t4\nAaAaA\t4\nA\t3\nAa_A\t2\nAa_a9\t2\na-a\t2\nA9A\t2\naA\t2\nAaA9\t2\nA9a\t2\na9a9\t2\nA_A\t1\nAa Aa Aa Aa\t1\naAa9\t1\nA_a_a\t1\nAa-Aa\t1\n_a\t1\nAa_A_Aa\t1\na_\t1\na`\t1\na a\t1\nAa9a\t1\nA9a9A\t1\n_a_\t1\n9a9\t1\nA9\t1\na.a@a.a\t1\nAa9aAa9\t1\na.a.a\t1\nAa A\t1\nAa9A\t1\na_a_a\t1\na. a.\t1\na_a_9\t1\na9a9a9\t1\na@a\t1\nA9aAa\t1\nAaAaAa.a\t1\nAaAaA_A\t1\na9a9a\t1\nAa.A9\t1\nAa�aAa\t1\nAa Aa Aa\t1\nAa_a_a\t1\n"}]},"apps":[],"jobName":"paragraph_1506790227269_1057923881","id":"20170930-165027_339129263","dateCreated":"2017-09-30T16:50:27+0000","dateStarted":"2017-09-30T16:51:43+0000","dateFinished":"2017-09-30T16:51:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18679"},{"text":"%sql\nSELECT year, count(1) FROM (SELECT YEAR(TO_TIME(listened_at)) AS year FROM listenbrainz) tmp\nGROUP BY year","user":"anonymous","dateUpdated":"2017-09-30T16:54:00+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"year\tcount(1)\n2007\t2848570\n2015\t5535906\n2006\t2143354\n2013\t4804006\n2014\t5184467\n1991\t6\n1970\t131823\n2012\t4621858\n2009\t3642870\n2016\t6163500\n2005\t1349496\n2010\t3949508\n2011\t4269153\n2008\t3228931\n2017\t4749520\n"}]},"apps":[],"jobName":"paragraph_1506790226508_1153726357","id":"20170930-165026_698557689","dateCreated":"2017-09-30T16:50:26+0000","dateStarted":"2017-09-30T16:53:47+0000","dateFinished":"2017-09-30T16:53:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18680"},{"text":"%md\n## Clearly some data issue with 1970 (epoch) records\n\nThe suggestion for cleansing records are the following\n\n- date should be >= 2005-01-01\n- release_mbid should be empty\n- tags should be empty\n- track_name should be specified\n- user_name should be specified","user":"anonymous","dateUpdated":"2017-09-30T16:57:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Clearly some data issue with 1970 (epoch) records</h2>\n<p>The suggestion for cleansing records are the following</p>\n<ul>\n  <li>date should be &gt;= 2005-01-01</li>\n  <li>release_mbid should be empty</li>\n  <li>tags should be empty</li>\n  <li>track_name should be specified</li>\n  <li>user_name should be specified</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1506790224784_548901086","id":"20170930-165024_524901480","dateCreated":"2017-09-30T16:50:24+0000","dateStarted":"2017-09-30T16:57:55+0000","dateFinished":"2017-09-30T16:57:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18681"},{"text":"val to_time = udf(TO_TIME)\nval year = udf(YEAR)\nval popCheck = udf(POP_CHECK)\n\nval CLEAN_STR: (String) => String = (s: String) => {\n    Try(s.toLowerCase().replaceAll(\"^\\\\W\", \"\").trim).getOrElse(\"\")\n}\n\nval clean = udf(CLEAN_STR)\n\nval cleanDF = df.filter(\n    popCheck(col(\"tags\")) === 0 && \n    popCheck(col(\"artist_mbids\")) === 0 && \n    popCheck(col(\"release_mbid\")) === 0 && \n    popCheck(col(\"user_name\")) === 1 && \n    popCheck(col(\"track_name\")) === 1 &&\n    year(to_time(col(\"listened_at\"))) >= 2015\n)\n.select(\"listened_at\", \"user_name\", \"artist_name\", \"track_name\")\n.withColumn(\"user\", clean(col(\"user_name\"))).drop(\"user_name\")\n.withColumn(\"artist\", clean(col(\"artist_name\"))).drop(\"artist_name\")\n.withColumn(\"track\", clean(col(\"track_name\"))).drop(\"track_name\")\n.withColumn(\"timestamp\", to_time(col(\"listened_at\"))).drop(\"listened_at\")","user":"anonymous","dateUpdated":"2017-09-30T17:04:15+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nto_time: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,TimestampType,Some(List(StringType)))\n\nyear: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(TimestampType)))\n\npopCheck: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\n\nCLEAN_STR: String => String = <function1>\n\nclean: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(StringType)))\n\ncleanDF: org.apache.spark.sql.DataFrame = [user: string, artist: string ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1506790112432_130108748","id":"20170930-164832_2103551895","dateCreated":"2017-09-30T16:48:32+0000","dateStarted":"2017-09-30T17:04:15+0000","dateFinished":"2017-09-30T17:04:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18682"},{"title":"Store this intermediate clean data to parquet","text":"cleanDF.write.parquet(\"/user/antoine/listenbrainz-clean\")","user":"anonymous","dateUpdated":"2017-09-30T17:05:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1506790896192_1835249643","id":"20170930-170136_1454066984","dateCreated":"2017-09-30T17:01:36+0000","dateStarted":"2017-09-30T17:05:19+0000","dateFinished":"2017-09-30T17:05:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18683"},{"text":"val cleanDF = spark.read.parquet(\"/user/antoine/listenbrainz-clean\")\ncleanDF.createOrReplaceTempView(\"brainz\")","user":"anonymous","dateUpdated":"2017-09-30T17:10:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ncleanDF: org.apache.spark.sql.DataFrame = [user: string, artist: string ... 2 more fields]\n"}]},"apps":[],"jobName":"paragraph_1506791119649_203284371","id":"20170930-170519_1505590032","dateCreated":"2017-09-30T17:05:19+0000","dateStarted":"2017-09-30T17:10:44+0000","dateFinished":"2017-09-30T17:10:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18684"},{"text":"cleanDF.groupBy(\"user\").count.orderBy(desc(\"count\")).show","user":"anonymous","dateUpdated":"2017-09-30T17:07:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+------+\n|         user| count|\n+-------------+------+\n|       catcat|348954|\n|    lb_test_1|333988|\n|       dak180|219443|\n|         ozon|156158|\n|billyshoe1999|141251|\n|austinhartman|140255|\n|    dale coop|137939|\n|    groupama3|135554|\n|     zolireds|132929|\n| marasvinicus|126314|\n|silent singer|122980|\n|   erzengel11|120736|\n|   kypatop_hm|117817|\n|   asmis hara|114679|\n|   oldprogger|113087|\n|   sillypokes|113062|\n|       joancm|109782|\n|       jflory| 98574|\n| slashdesigns| 96565|\n|      nova258| 90962|\n+-------------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1506791218345_-712124684","id":"20170930-170658_50575351","dateCreated":"2017-09-30T17:06:58+0000","dateStarted":"2017-09-30T17:07:23+0000","dateFinished":"2017-09-30T17:07:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18685"},{"title":"Catcat has no life! Same every hour of day","text":"%sql\nSELECT HOUR_OF_DAY(timestamp), count(1) FROM brainz where user = \"${user=catcat}\" GROUP BY HOUR_OF_DAY(timestamp) \norder BY 1 ASC","user":"anonymous","dateUpdated":"2017-09-30T17:23:11+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"stackedAreaChart":{},"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"UDF:HOUR_OF_DAY(timestamp)","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(1)","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","tableHide":false,"editorHide":true,"title":true},"settings":{"params":{"user":"catcat"},"forms":{"user":{"name":"user","defaultValue":"catcat","hidden":false,"$$hashKey":"object:20098"}}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"UDF:HOUR_OF_DAY(timestamp)\tcount(1)\n0\t14482\n1\t14336\n2\t14908\n3\t14904\n4\t14848\n5\t14609\n6\t14817\n7\t14832\n8\t15284\n9\t14876\n10\t14905\n11\t14540\n12\t14677\n13\t14684\n14\t14639\n15\t14676\n16\t14450\n17\t13979\n18\t14029\n19\t13792\n20\t13824\n21\t14065\n22\t14598\n23\t14200\n"}]},"apps":[],"jobName":"paragraph_1506791238823_1143565234","id":"20170930-170718_204474382","dateCreated":"2017-09-30T17:07:18+0000","dateStarted":"2017-09-30T17:23:11+0000","dateFinished":"2017-09-30T17:23:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18686"},{"title":"Catcat has no life! Same every day of week","text":"%sql\nSELECT DAY_OF_WEEK(timestamp), count(1) FROM brainz where user = \"${user=catcat}\" GROUP BY DAY_OF_WEEK(timestamp) \norder BY 1 ASC","user":"anonymous","dateUpdated":"2017-09-30T17:23:15+0000","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"stackedAreaChart":{},"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"UDF:DAY_OF_WEEK(timestamp)","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"count(1)","index":1,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql","tableHide":false,"editorHide":true,"title":true},"settings":{"params":{"user":"catcat"},"forms":{"user":{"name":"user","defaultValue":"catcat","hidden":false,"$$hashKey":"object:20179"}}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"UDF:DAY_OF_WEEK(timestamp)\tcount(1)\n1\t48827\n2\t49743\n3\t51051\n4\t50866\n5\t49247\n6\t49700\n7\t49520\n"}]},"apps":[],"jobName":"paragraph_1506791997018_257360990","id":"20170930-171957_808999049","dateCreated":"2017-09-30T17:19:57+0000","dateStarted":"2017-09-30T17:23:15+0000","dateFinished":"2017-09-30T17:23:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18687"},{"text":"cleanDF.filter(col(\"user\") !== \"catcat\").write.parquet(\"/user/antoine/listenbrainz-clean-catcat\")","user":"anonymous","dateUpdated":"2017-09-30T17:25:53+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"}]},"apps":[],"jobName":"paragraph_1506791471352_740270121","id":"20170930-171111_1110874148","dateCreated":"2017-09-30T17:11:11+0000","dateStarted":"2017-09-30T17:25:53+0000","dateFinished":"2017-09-30T17:25:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:18688"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1506792349806_-170345682","id":"20170930-172549_1620983647","dateCreated":"2017-09-30T17:25:49+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:18689"}],"name":"TEXATA-EDA","id":"2CTR2AF2M","angularObjects":{"2CWGX5A14:shared_process":[],"2CWPQHZEE:shared_process":[],"2CWXTY968:shared_process":[],"2CUN4E98D:shared_process":[],"2CVZACBFU:shared_process":[],"2CTHGMQ9W:shared_process":[],"2CWYBP451:shared_process":[],"2CUNAWHYY:shared_process":[],"2CU937NEU:shared_process":[],"2CV1T7WKV:shared_process":[],"2CUHNKF7G:shared_process":[],"2CWAXFHJY:shared_process":[],"2CVCJMKNZ:shared_process":[],"2CWYGPNPN:shared_process":[],"2CTZNT8QB:shared_process":[],"2CWNMJC2D:shared_process":[],"2CVXGFPJ9:shared_process":[],"2CVBKT1DC:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}